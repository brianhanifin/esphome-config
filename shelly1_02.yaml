---
# Shelly 2 Power Module
# Location: Upstairs Bathroom
#
substitutions:
  project: Upstairs Bathroom Exhaust
  id: shelly1_02
  default_humidity_diff_threshold: "10"   # Difference between house humidity and bathroom humidity.
  countdown_duration: "600"             # 600 seconds = 10 minutes

  <<: !include common/substitutions/gpio/shelly1.yaml

<<: !include common/esphome/esp8266.yaml
<<: !include common/common.yaml

script:
  - id: countdown_restart
    then:
      - globals.set:
          id: remaining_time
          value: !lambda return $countdown_duration;

binary_sensor:
  # Physical Toggle Switch. Monitor for switch position changes internally. Do not expose to Home Assistant.
  - platform: gpio
    pin:
      number: $button_gpio
    id: button
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_state:
      - switch.toggle: relay

      - text_sensor.template.publish:
          id: trigger
          state: PHYSICAL

  # Use motion detection to keep fan running.
  - platform: homeassistant
    id: motion
    entity_id: binary_sensor.upstairs_bathroom_motion

globals:
  - id: remaining_time
    type: int
    restore_value: no
    initial_value: "0"

  - id: humidity_diff
    type: float
    restore_value: no
    initial_value: "0.1"

  - id: diff_trigger
    type: float
    restore_value: no
    initial_value: $default_humidity_diff_threshold

# Update the countdown timers every 5 seconds.
interval:
  - interval: 5s
    then:
      #- lambda: ESP_LOGD("interval", "diff %.1f > trigger %.1f", id(humidity_diff), id(diff_trigger));

      - if: # Humidity threshold trigger.
          condition:
            and:
              # If the difference is greater than the trigger.
              - lambda: return id(humidity_diff) > id(diff_trigger);
              # - sensor.in_range:
              #     id: humidity_diff
              #     above: $default_humidity_diff_threshold
              
              # and the fan is off.
              - switch.is_off: relay
          then: 
            - switch.turn_on: relay

      - if: # When motion is active, restart the countdown.
          condition:
            - binary_sensor.is_on: motion
          then:
            - script.execute: countdown_restart

      - if: # Decrement the countdown.
          condition:
            and:
              - lambda: return id(remaining_time) > 0;
              - switch.is_on: relay
          then:
            - globals.set:
                id: remaining_time
                value: !lambda return id(remaining_time) -= 5;
            - sensor.template.publish:
                id: countdown
                state: !lambda return id(remaining_time);

          # Time to turn off the relay.
          else:
            - if: # Decrement the countdown.
                condition:
                  - switch.is_on: relay
                then:
                  - switch.turn_off: relay

number:
  - platform: template
    name: Upstairs Bathroom Humidity Trigger
    id: diff_trigger_ui
    icon: "mdi:water-percent"
    optimistic: true
    initial_value: $default_humidity_diff_threshold
    restore_value: true
    min_value: 5
    max_value: 15
    step: 0.5
    set_action:
      then:
        - globals.set:
            id: diff_trigger
            value: !lambda return id(diff_trigger_ui).state;

sensor:
  # Measure the difference between the house humidity and bathroom humidity from Home Assistant.
  - platform: homeassistant
    id: humidity_diff_ha
    internal: true
    accuracy_decimals: 1
    entity_id: sensor.upstairs_bathroom_humidity_difference
    on_value:
      then:
        - globals.set:
            id: humidity_diff
            value: !lambda return id(humidity_diff_ha).state;

  # Retrieve the difference trigger value from the Home Assistant UI.
  # - platform: homeassistant
  #   id: diff_trigger_ha
  #   internal: true
  #   accuracy_decimals: 1
  #   entity_id: input_number.upstairs_bath_humidity_trigger
  #   on_value:
  #     then:
  #       - globals.set:
  #           id: diff_trigger
  #           value: !lambda return id(diff_trigger_ha).state;

  - platform: template
    id: countdown
    name: "$project: Countdown"
    accuracy_decimals: 0
    icon: "mdi:camera-timer"

switch:
  - platform: gpio
    id: relay
    pin: $relay_gpio
    on_turn_on:
      # Start the countdown timer.
      - script.execute: countdown_restart
    on_turn_off:
      - sensor.template.publish:
          id: countdown
          state: 0

  - platform: template
    id: virtual_switch
    name: $project
    optimistic: no
    lambda: |-
      return (id(relay).state);
    turn_on_action:
      - switch.turn_on: relay
      
      - text_sensor.template.publish:
          id: trigger
          state: VIRTUAL
    turn_off_action:
      - switch.turn_off: relay

text_sensor:
  # Trigger states: PHYSICAL, VIRTUAL (UI or Alexa/Google), THRESHOLD
  - platform: template
    id: trigger
    name: "$project: Last Trigger"
